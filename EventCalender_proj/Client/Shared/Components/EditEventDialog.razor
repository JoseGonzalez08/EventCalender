@using EventCalender_proj.Client.Shared;
@using EventCalender_proj.Client.Shared.Models;
@using EventCalender_proj.Client.Shared.Components;
@inject HttpClient Http;
@using MudBlazor


<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="@Event.Name" Label="Name" />
        <MudDatePicker @bind-Date="Event.DateTime" Label="Date" />
        <MudTextField @bind-Value="@Event.Description" Label="Description" Multiline="true" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Submit</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public EventClass Event { get; set; }

    void Cancel() => MudDialog.Cancel();

    async void Submit()
    {
        var response = await Http.PutAsJsonAsync($"/api/event/{Event.Id}", Event);
        if (response.IsSuccessStatusCode)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Console.Write("the Event Was not changed, unexpected error occured.");// handle error
        }
    }
}
