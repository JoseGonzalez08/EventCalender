@using EventCalender_proj.Client.Shared;
@using EventCalender_proj.Client.Shared.Models;
@using EventCalender_proj.Client.Shared.Components;
@inject HttpClient Http;

<MudDialog>
    <DialogContent>
        @foreach (var eventItem in events)
        {
            <EventCard model="eventItem"></EventCard>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public DateTime SelectedDate { get; set; }

    public EventClass model { get; set; }
    List<EventClass> events = new List<EventClass>();
    //private bool showEventCard = false; // Flag to control the display of the EventCard
    private DateTime clickedDate;



    public async Task GetEventsByDate(DateTime clickedDate)
    {
        // Fetch all events from the API
        List<EventClass> allEvents = await Http.GetFromJsonAsync<List<EventClass>>("/api/event");

        // Filter events based on the specified date
        events = allEvents.Where(e => e.DateTime?.Date == SelectedDate.Date).ToList();

    }

    protected override async Task OnInitializedAsync()
    {
        await GetEventsByDate(SelectedDate);
    }

 
    //private void LoadEvent()
    //{
    //    showEventCard = true;
    //}
    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

}
